# -*- coding: utf-8 -*-
"""q_4_c_dolphins.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FMaIhtJ7ZbytlHeFTB9ZasFhYj7-0GWG
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
#%cd /content/drive/MyDrive/SMA_A1/
# %cd /content/drive/MyDrive/Semester_3/SMA/

!pip install igraph

import igraph

g = igraph.read("dolphins.gml")

A = g.get_edgelist()

!pip install networkx
import networkx as nx

G = nx.Graph(A) 
print(G)

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt

# %matplotlib inline

# visualize the graph
nx.draw(G, with_labels = True)

# start of spectral clustering
from datetime import datetime
start=datetime.now()
# create the adjacency matrix
adj_mat = nx.adjacency_matrix(G)
print(adj_mat.todense())

import numpy as np

# now create the degree matrix
deg_mat = np.diag(np.sum(np.array(adj_mat.todense()), axis=1))
print('degree matrix:')
print(deg_mat)

# Here's the laplacian matrix
our_laplace_mat = deg_mat - adj_mat
print('laplacian matrix:')
print(our_laplace_mat)

eigen_val, eigen_vector = np.linalg.eig(our_laplace_mat)
# here are the eigenvalues of the Laplacian matrix
print('eigenvalues:')
print(eigen_val)
# here are the eigenvectors of the Laplacian matrix
print('eigenvectors:')
print(eigen_vector)

# sort the eigenvalues & eigenvectors on the basis of eigen values
eigen_vector = eigen_vector[:,np.argsort(eigen_val)]
eigen_val = eigen_val[np.argsort(eigen_val)]

print(eigen_vector)



clusters = v[:,1] > 0

#the number of clusters are returned
print(len(clusters))

new_list = np.array(clusters)
l1= new_list.tolist()
print(l1)

c0 = []
c1 = []

#the cluster belonging relation existence of each nodes are shown
for index, node in enumerate(l1):
  ele = node[0]
  print(index, ele)

#the two separate clusters are grouped accordingly
for index, node in enumerate(l1):
  if node[0]:
    c0.append(index)
  else:
    c1.append(index)

print(c0)

print(c1)
print(datetime.now()-start)

import statistics
set = [0.018406, 0.021929, 0.019798, 0.022855, 0.019910]
print(statistics.mean(set))